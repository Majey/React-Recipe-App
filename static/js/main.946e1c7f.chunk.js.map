{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAsBeA,EAlBA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YAErC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BAEQG,EAAYI,KAAI,SAAAC,GAAU,OACtB,6BAAKA,EAAWC,YAI5B,8BAAG,gDAA4BR,KAC/B,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SC+C1CC,EA3DH,WACV,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAGAC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAbf,WAae,oBAZd,qCAWG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAkBhB,OACE,sBAAKvB,UAAU,MAAf,UAEE,mDAEA,uBAAM0B,SAXQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAQmBb,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,OAAOC,MAAOlB,EAAQmB,SAjB1C,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,OACnBN,QAAQC,IAAIb,MAgBR,wBAAQZ,UAAU,gBAAgB6B,KAAK,SAAvC,uBAGF,qBAAK7B,UAAU,UAAf,SAEIU,EAAQP,KAAI,SAAAD,GAAM,OAChB,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAO+B,MACrBpC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAO+B,gBCtClBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.946e1c7f.chunk.js","sourcesContent":["import React from \"react\";\r\n//import CSS\r\nimport style from \"./recipe.module.css\"\r\n\r\nconst Recipe = ({title, calories, image, ingredients}) => {\r\n\r\n    return (\r\n        <div className={style.recipe}>                \r\n            <h1>{title}</h1>\r\n            <ol>\r\n                {\r\n                    ingredients.map(ingredient => \r\n                        <li>{ingredient.text}</li>\r\n                    )\r\n                }\r\n            </ol>\r\n            <p><strong>Calories: </strong>{calories}</p>\r\n            <img className={style.image} src={image} alt=\"\" /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React, { useEffect, useState } from 'react';\nimport './App.css';\n//import components\nimport Recipe from './Recipe';\n\nconst App = () => {\n  const APP_ID = \"0facebfa\";\n  const APP_KEY = \"88eeed96cb93c64cc787a617872f1718\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);  \n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(search);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\")\n  }\n\n  return (\n    <div className=\"App\">\n\n      <h1>SEARCH ANY RECIPE</h1>\n\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form> \n\n      <div className='recipes'>\n        {\n          recipes.map(recipe => (\n            <Recipe \n              key={recipe.recipe.label}\n              title={recipe.recipe.label} \n              calories={recipe.recipe.calories} \n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients} \n            />\n          ))\n        }\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__jjIKy\",\"image\":\"recipe_image__296I8\"};"],"sourceRoot":""}